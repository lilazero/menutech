// Generated by Xata Codegen 0.30.0. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "Produktet",
    columns: [
      { name: "productName", type: "text", defaultValue: "Pa Emer" },
      { name: "productCreator", type: "text" },
      { name: "productPrice", type: "text", defaultValue: "0" },
      { name: "Image", type: "file" },
    ],
  },
  {
    name: "productCreator",
    columns: [
      { name: "productCreatorName", type: "text" },
      { name: "creatorType", type: "text", defaultValue: "noType" },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Produktet = InferredTypes["Produktet"];
export type ProduktetRecord = Produktet & XataRecord;

export type ProductCreator = InferredTypes["productCreator"];
export type ProductCreatorRecord = ProductCreator & XataRecord;

export type DatabaseSchema = {
  Produktet: ProduktetRecord;
  productCreator: ProductCreatorRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://Andi-Lilaj-s-workspace-s9rdlr.eu-central-1.xata.sh/db/menutech",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
